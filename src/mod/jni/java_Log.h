#pragma once

/* DO NOT EDIT THIS FILE - it is machine generated */
#include "ll/api/Logger.h"
#include <jni.h>
#include "mod/Entry.h"

#define JCLASS_LOGGER PACK_JAVA_NAME("Logger")

namespace lje::j_Logger{

jobject newLogger(JNIEnv* env, const char* name);
jobject newLogger(JNIEnv* env, const ll::Logger* logger);
/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    init
 * Signature: ()V
 */
void init
  (JNIEnv *, jobject, jstring);

/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    info
 * Signature: (Ljava/lang/String;)V
 */
void info
  (JNIEnv *, jobject, jstring);

/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    error
 * Signature: (Ljava/lang/String;)V
 */
void error
  (JNIEnv *, jobject, jstring);

/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    debug
 * Signature: (Ljava/lang/String;)V
 */
void debug
  (JNIEnv *, jobject, jstring);

/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    warn
 * Signature: (Ljava/lang/String;)V
 */
void warn
  (JNIEnv *, jobject, jstring);

/*
 * Class:     bluebox_levilamina_engine_Log
 * Method:    dispose
 * Signature: ()V
 */
void dispose
  (JNIEnv *, jobject);

} // namespace lje

